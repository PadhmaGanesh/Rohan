pipeline {
    agent any

    environment {
        EC2_HOST = '3.108.223.68'   // e.g., 3.111.22.33
        EC2_USER = 'ec2-user'
        WEB_ROOT = '/var/www/html'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Deploy index.html to Web EC2') {
            steps {
                sshagent(credentials: ['ec2-web-ssh']) {
                    sh '''
                        set -e
                        # Copy file to a temp path on the server
                        scp -o StrictHostKeyChecking=no index.html ${EC2_USER}@${EC2_HOST}:/tmp/index.html

                        # Move into place with sudo and set perms
                        ssh -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} \
                          "sudo mkdir -p ${WEB_ROOT} && \
                           sudo mv /tmp/index.html ${WEB_ROOT}/index.html && \
                           sudo chown root:root ${WEB_ROOT}/index.html && \
                           sudo chmod 0644 ${WEB_ROOT}/index.html"
                    '''
                }
            }
        }

        stage('Restart Nginx') {
            steps {
                sshagent(credentials: ['ec2-web-ssh']) {
                    sh '''
                        ssh -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} \
                          "sudo nginx -t && sudo systemctl restart nginx"
                    '''
                }
            }
        }

        stage('Verify Deployment') {
            steps {
                sh 'curl -s http://${EC2_HOST} | tee response.html'
                sh "grep -q 'Hello, Rohan!' response.html"
            }
        }
    }

    post {
        success {
            echo "✅ Deployed successfully! Open http://${env.EC2_HOST}"
            archiveArtifacts artifacts: 'response.html', fingerprint: true
        }
        failure {
            echo '❌ Deployment failed. Check console log.'
        }
    }
}
